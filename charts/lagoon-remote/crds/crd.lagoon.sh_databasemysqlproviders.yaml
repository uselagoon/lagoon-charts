---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databasemysqlproviders.crd.lagoon.sh
spec:
  group: crd.lagoon.sh
  names:
    kind: DatabaseMySQLProvider
    listKind: DatabaseMySQLProviderList
    plural: databasemysqlproviders
    singular: databasemysqlprovider
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseMySQLProvider is the Schema for the databasemysqlproviders
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseMySQLProviderSpec defines the desired state of DatabaseMySQLProvider
            properties:
              mysqlConnections:
                description: MySQLConnections defines the connection to a MySQL database
                items:
                  description: MySQLConnection defines the connection to a MySQL database
                  properties:
                    enabled:
                      default: true
                      description: Enabled is a flag to enable or disable the MySQL
                        database
                      type: boolean
                    hostname:
                      description: Hostname is the hostname of the MySQL database
                      type: string
                    name:
                      description: |-
                        Name is the name of the MySQL database connection
                        it is used to identify the connection. Please use a unique name
                        for each connection. This field will be used in the DatabaseRequest
                        to reference the connection. The databasemysqlprovider controller will
                        error if the name is not unique.
                      type: string
                    passwordSecretRef:
                      description: PasswordSecretRef is the reference to the secret
                        containing the password
                      properties:
                        name:
                          description: name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    port:
                      description: Port is the port of the MySQL database
                      maximum: 65535
                      minimum: 1
                      type: integer
                    replicaHostnames:
                      description: ReplicaHostnames is the list of hostnames of the
                        MySQL database replicas
                      items:
                        type: string
                      type: array
                    username:
                      description: Username is the username of the MySQL database
                      type: string
                  required:
                  - enabled
                  - hostname
                  - name
                  - passwordSecretRef
                  - port
                  - username
                  type: object
                minItems: 1
                type: array
              scope:
                default: development
                description: |-
                  Scope is the scope of the database request
                  it can be either "production" or "development" or "custom"
                enum:
                - production
                - development
                - custom
                type: string
            required:
            - mysqlConnections
            - scope
            type: object
          status:
            description: DatabaseMySQLProviderStatus defines the observed state of
              DatabaseMySQLProvider
            properties:
              conditions:
                description: Conditions defines the status conditions
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              mysqlConnectionStatus:
                description: MySQLConnectionStatus provides the status of the MySQL
                  database
                items:
                  description: MySQLConnectionStatus defines the status of a MySQL
                    database connection
                  properties:
                    enabled:
                      description: Enabled is a flag to indicate whether a MySQL database
                        is enabled or not
                      type: boolean
                    hostname:
                      description: Hostname is the hostname of the MySQL database
                      type: string
                    mysqlVersion:
                      description: MySQLVersion is the version of the MySQL database
                      type: string
                    name:
                      description: |-
                        Name is the name of the MySQL database connection
                        it is used to identify the connection. Please use a unique name
                        for each connection. This field will be used in the DatabaseRequest
                        to reference the connection. The databasemysqlprovider controller will
                        error if the name is not unique.
                      type: string
                    status:
                      description: Status is the status of the MySQL database
                      enum:
                      - available
                      - unavailable
                      type: string
                  required:
                  - enabled
                  - hostname
                  - mysqlVersion
                  - name
                  - status
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last observed generation
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}