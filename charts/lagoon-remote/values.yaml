# Default values for lagoon-remote.

# global values which can affect subcharts
global:
  # set to true to enable openshift support
  openshift: false

imagePullSecrets: []

logsDispatcherHost: |-
  lagoon-logging-logs-dispatcher.lagoon-logging.svc.cluster.local

# If this value is set, it will create an `mxout` ExternalName service in the
# deployed namespace pointing at the given host. This service can then be used
# by workloads running in-cluster to connect to a platform-provided mailserver.
mxoutHost: ""

# this default image tag is set for all services and can be overridden
# on the service level, if not set it uses chart appVersion
imageTag: ""

dockerHost:
  image:
    repository: uselagoon/docker-host
    pullPolicy: Always
    tag: ""

  name: docker-host

  registry: registry.lagoon.svc:5000

  repositoryToUpdate: amazeeio|lagoon

  pruneImagesUntil: 168h

  replicaCount: 1

  ## proxy configuration
  # httpProxy: ""
  # httpsProxy: ""
  # noProxy: ""

  # add extra environment variables if required
  extraEnvs:

  storage:
    create: true
    size: 750Gi
    # className sets the storageClassName for the docker-host PVC. This is
    # useful if the docker-host requires a specific storage class for features
    # such as increased IOPS.
    #
    # WARNING: On platforms such as AKS not all storage volume classes can be
    # bound to all node types. So if you configure a storage class that can't
    # be bound to any nodes in the cluster it will cause the docker-host pod to
    # fail to schedule. For example AKS requires Premium Storage suport on the
    # node for the managed-premium storage class.
    #
    # If className is not defined the chart will not set any specify storage
    # class on the PVC, effectively falling back to the cluster default.
    #
    # className: managed-premium

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    name:

  podSecurityContext: {}

  securityContext:
    privileged: true
    seLinuxOptions:
      # Ensures selinux relabeling is disabled, this would case the container never to start
      # as there can be so many files in the persistent storage
      type: spc_t

  resources: {}

  service:
    type: ClusterIP
    port: 2375

  tolerations:
  - key: lagoon/build
    effect: NoSchedule
    operator: Exists
  - key: lagoon/build
    effect: PreferNoSchedule
    operator: Exists
  - key: lagoon.sh/build
    effect: NoSchedule
    operator: Exists
  - key: lagoon.sh/build
    effect: PreferNoSchedule
    operator: Exists

# this account is used by the legacy Lagoon kubernetes build deploy system.
kubernetesBuildDeploy:
  serviceAccount:
    # The name of the service account to use.
    # If not set, a name is generated using the fullname template.
    name:

# This subchart is disabled by default until this build-deploy type is in
# widespread use.
lagoon-build-deploy:
  enabled: false
  # these values are used by the lagoon-build-deploy controller and do not have
  # sensible defaults.
  # rabbitMQUsername:
  # rabbitMQPassword:
  # rabbitMQHostname:
  # lagoonTargetName:
  # taskSSHHost: ""
  # taskSSHPort: ""
  # taskAPIHost: ""
  # See the parent chart for the full range of values that can be passed here to control builds
  # https://github.com/uselagoon/lagoon-charts/blob/main/charts/lagoon-build-deploy/values.yaml

# dioscuri is the operator which implements Lagoon active-standby.
# This subchart is enabled by default as this is a core Lagoon feature.
dioscuri:
  enabled: true

# dbaas-operator provisions database-as-a-service accounts for projects.
# Example provider configuration can be found in the dbaas-operator values.yaml
# https://github.com/amazeeio/charts/blob/main/charts/dbaas-operator/values.yaml
# This subchart is disabled by default for legacy reasons. It will be enabled
# by default in future as this is a core Lagoon feature.
dbaas-operator:
  enabled: false
  enableMariaDBProviders: true
  enableMongoDBProviders: true
  enablePostreSQLProviders: true

# if you are using the dbaas-operator in a different release, you can define the http endpoint to use here
# setting this will always override whatever `dbaas-operator` would set, useful if you want to target a different endpoint
dbaasHTTPEndpoint: ""

# lagoon-gatekeeper is a subchart which enforces security policy for Lagoon
# workloads. It is currently experimental so it is disabled by default.
lagoon-gatekeeper:
  enabled: false

lagoon-insights-remote:
  enabled: false
  # burnAfterReading: false
