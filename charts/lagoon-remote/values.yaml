# Default values for lagoon-remote.

imagePullSecrets: []

logsDispatcherHost: |-
  lagoon-logging-logs-dispatcher.lagoon-logging.svc.cluster.local

# this default image tag is set for all services and can be overridden
# on the service level, if not set it uses chart appVersion
imageTag: ""

dockerHost:
  image:
    repository: uselagoon/docker-host
    pullPolicy: Always
    tag: ""

  name: docker-host

  registry: registry.lagoon.svc:5000

  repositoryToUpdate: lagoon

  replicaCount: 1

  storage:
    create: true
    size: 750Gi

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    name:

  podSecurityContext: {}

  securityContext:
    privileged: true

  resources: {}

  service:
    type: ClusterIP
    port: 2375

  tolerations:
  - key: lagoon/build
    effect: NoSchedule
    operator: Exists
  - key: lagoon/build
    effect: PreferNoSchedule
    operator: Exists
  - key: lagoon.sh/build
    effect: NoSchedule
    operator: Exists
  - key: lagoon.sh/build
    effect: PreferNoSchedule
    operator: Exists

# this account is used by the legacy Lagoon kubernetes build deploy system.
kubernetesBuildDeploy:
  serviceAccount:
    # The name of the service account to use.
    # If not set, a name is generated using the fullname template.
    name:

lagoon-build-deploy:
  enabled: false
  # these values are used by the lagoon-build-deploy controller and do not have
  # sensible defaults.
  # rabbitMQUsername:
  # rabbitMQPassword:
  # rabbitMQHostname:
  # lagoonTargetName:
  # taskSSHHost: ""
  # taskSSHPort: ""
  # taskAPIHost: ""

# dioscuri is the operator which implements Lagoon active-standby.
dioscuri:
  enabled: true

# dbaasOperator provisions DBaaS accounts for projects.
dbaasOperator:
  enabled: false
  image:
    repository: amazeeio/dbaas-operator
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1.3"

  extraArgs:
  - "--metrics-addr=127.0.0.1:8080"
  - "--enable-leader-election=true"

  service:
    type: ClusterIP
    port: 8443

  serviceAccount:
    # The name of the service account to use.
    # If not set, a name is generated using the fullname template.
    name:

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  # this sidecar runs in the same pod as dioscuri
  kubeRBACProxy:
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      pullPolicy: IfNotPresent
      tag: v0.4.1

    securityContext: {}

    resources: {}

  # this is a list of providers that the dbaas operator uses to provision
  # mariadb services for projects
  mariadbProviders: {}
    # production:
    #   environment: production
    #   hostname: 172.17.0.1.nip.io
    #   readReplicaHostnames:
    #   - 172.17.0.1.nip.io
    #   password: password
    #   port: '3306'
    #   user: root

    # development:
    #   environment: development
    #   hostname: 172.17.0.1.nip.io
    #   readReplicaHostnames:
    #   - 172.17.0.1.nip.io
    #   password: password
    #   port: '3306'
    #   user: root

    # development-azure:
    #   environment: development
    #   hostname: azure-hostname.172.17.0.1.nip.io
    #   readReplicaHostnames:
    #   - azure-hostname.172.17.0.1.nip.io
    #   password: password
    #   port: '3306'
    #   user: root@azure-hostname
    #   type: azure

  # this is a list of providers that the dbaas operator uses to provision
  # postgresql services for projects
  postgresqlProviders: {}
    # production:
    #   environment: production
    #   hostname: 172.17.0.1.nip.io
    #   password: password
    #   port: '3306'
    #   user: root

    # development:
    #   environment: development
    #   hostname: 172.17.0.1.nip.io
    #   password: password
    #   port: '3306'
