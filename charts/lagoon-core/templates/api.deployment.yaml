apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoon-core.api.fullname" . }}
  labels:
    {{- include "lagoon-core.api.labels" . | nindent 4 }}
spec:
{{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lagoon-core.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/api.secret: {{ include (print $.Template.BasePath "/api.secret.yaml") . | sha256sum }}
        checksum/api-db.secret: {{ include (print $.Template.BasePath "/api-db.secret.yaml") . | sha256sum }}
        checksum/keycloak.secret: {{ include (print $.Template.BasePath "/keycloak.secret.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    {{- with .Values.api.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lagoon-core.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml (coalesce .Values.api.podSecurityContext .Values.podSecurityContext) | nindent 8 }}
      containers:
      - name: api
        securityContext:
          {{- toYaml .Values.api.securityContext | nindent 10 }}
        image: "{{ .Values.api.image.repository }}:{{ coalesce .Values.api.image.tag .Values.imageTag .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        env:
        - name: API_DB_HOST
          value: {{ include "lagoon-core.apiDB.fullname" . }}
        - name: API_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.apiDB.fullname" . }}
              key: API_DB_PASSWORD
        - name: API_HOST
          value: http://{{ include "lagoon-core.api.fullname" . }}:{{ .Values.api.service.port }}
        {{- with .Values.bitbucketAPIURL }}
        - name: BITBUCKET_API_HOST
          value: {{ . | quote }}
        {{- end }}
        {{- with .Values.bitbucketAPIToken }}
        - name: BITBUCKET_API_TOKEN
          value: {{ . | quote }}
        {{- end }}
        - name: DEFAULT_BUILD_DEPLOY_IMAGE
        {{- with dig "default" "image" nil .Values.buildDeployImage }}
          value: {{ . }}
        {{- else }}
          value: {{ print "uselagoon/build-deploy-image:core-" .Chart.AppVersion }}
        {{- end }}
      {{- if dig "edge" "enabled" nil .Values.buildDeployImage }}
        - name: EDGE_BUILD_DEPLOY_IMAGE
          value: {{ coalesce .Values.buildDeployImage.edge.image (print "uselagoon/build-deploy-image:edge-v" (semver .Chart.AppVersion).Major "." (semver .Chart.AppVersion).Minor ".x") }}
      {{- end }}
        - name: ELASTICSEARCH_URL
          value: {{ required "A valid .Values.elasticsearchURL required!" .Values.elasticsearchURL | quote }}
        {{- with .Values.gitlabAPIURL }}
        - name: GITLAB_API_HOST
          value: {{ . | quote }}
        {{- end }}
        - name: HARBOR_API_VERSION
          value: {{ .Values.harborAPIVersion | quote }}
        - name: HARBOR_URL
          value: {{ required "A valid .Values.harborURL required!" .Values.harborURL | quote }}
        - name: JWTSECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.fullname" . }}-secrets
              key: JWTSECRET
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.keycloak.fullname" . }}
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: KEYCLOAK_ADMIN_USER
          value: {{ .Values.keycloakAdminUser | quote }}
        - name: KEYCLOAK_API_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.keycloak.fullname" . }}
              key: KEYCLOAK_API_CLIENT_SECRET
        - name: KEYCLOAK_URL
          value: http://{{ include "lagoon-core.keycloak.fullname" . }}:{{ .Values.keycloak.service.port }}
        - name: KIBANA_URL
          value: {{ required "A valid .Values.kibanaURL required!" .Values.kibanaURL | quote }}
        - name: LAGOON_VERSION
          value: {{ .Chart.AppVersion | replace "-" "." }}
        {{- with .Values.overwriteActiveStandbyTaskImage }}
        - name: OVERWRITE_ACTIVESTANDBY_TASK_IMAGE
          value: {{ . | quote }}
        {{- end }}
        - name: PROJECTSEED
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.fullname" . }}-secrets
              key: PROJECTSEED
        - name: RABBITMQ_HOST
          value: {{ include "lagoon-core.broker.fullname" . }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.broker.fullname" . }}
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.broker.fullname" . }}
              key: RABBITMQ_USERNAME
        - name: REDIS_HOST
          value: {{ include "lagoon-core.apiRedis.fullname" . }}
        - name: REGISTRY
          value: {{ required "A valid .Values.registry required!" .Values.registry | quote }}
        - name: S3_FILES_BUCKET
          value: {{ required "A valid .Values.s3FilesBucket required!" .Values.s3FilesBucket | quote }}
        - name: S3_FILES_HOST
          value: {{ required "A valid .Values.s3FilesHost required!" .Values.s3FilesHost | quote }}
        {{- with .Values.s3FilesRegion }}
        - name: S3_FILES_REGION
          value: {{ . | quote }}
        {{- end }}
        - name: UI_URL
          {{- if .Values.lagoonUIURL }}
          value: {{ .Values.lagoonUIURL | quote }}
          {{- else }}
          value: https://{{ index .Values.ui.ingress.hosts 0 "host" }}
          {{- end }}
        - name: WEBHOOK_URL
          {{- if .Values.lagoonWebhookURL }}
          value: {{ .Values.lagoonWebhookURL | quote }}
          {{- else }}
          value: https://{{ index .Values.webhookHandler.ingress.hosts 0 "host" }}
          {{- end }}
      {{- range $key, $val := .Values.api.additionalEnvs }}
        - name: {{ $key }}
          value: {{ $val | quote }}
      {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "lagoon-core.api.fullname" . }}
        ports:
        - name: http-3000
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /status
            port: http-3000
        readinessProbe:
          httpGet:
            path: /status
            port: http-3000
        startupProbe:
          httpGet:
            path: /status
            port: http-3000
          failureThreshold: 60
          periodSeconds: 10
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "lagoon-core.name" . }}
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - {{ include "lagoon-core.api.fullname" . }}
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      {{- with .Values.api.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
