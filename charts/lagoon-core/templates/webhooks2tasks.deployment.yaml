{{- if .Values.webhooks2tasks.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoon-core.webhooks2tasks.fullname" . }}
  labels:
    {{- include "lagoon-core.webhooks2tasks.labels" . | nindent 4 }}
spec:
{{- if not .Values.webhooks2tasks.autoscaling.enabled }}
  replicas: {{ .Values.webhooks2tasks.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lagoon-core.webhooks2tasks.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/broker.secret: {{ include (print $.Template.BasePath "/broker.secret.yaml") . | sha256sum }}
    {{- with .Values.webhooks2tasks.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lagoon-core.webhooks2tasks.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml (coalesce .Values.webhooks2tasks.podSecurityContext .Values.podSecurityContext) | nindent 8 }}
      containers:
      - name: webhooks2tasks
        securityContext:
          {{- toYaml .Values.webhooks2tasks.securityContext | nindent 10 }}
        image: "{{ .Values.webhooks2tasks.image.repository }}:{{ coalesce .Values.webhooks2tasks.image.tag .Values.imageTag .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.webhooks2tasks.image.pullPolicy }}
        env:
        - name: API_HOST
          value: http://{{ include "lagoon-core.api.fullname" . }}:{{ .Values.api.service.port }}
        - name: DEFAULT_BUILD_DEPLOY_IMAGE
        {{- with dig "default" "image" nil .Values.buildDeployImage }}
          value: {{ . }}
        {{- else }}
          value: {{ print "uselagoon/build-deploy-image:core-" .Chart.AppVersion }}
        {{- end }}
      {{- if dig "edge" "enabled" nil .Values.buildDeployImage }}
        - name: EDGE_BUILD_DEPLOY_IMAGE
          value: {{ coalesce .Values.buildDeployImage.edge.image (print "uselagoon/build-deploy-image:edge-v" (semver .Chart.AppVersion).Major "." (semver .Chart.AppVersion).Minor ".x") }}
      {{- end }}
        {{- with .Values.gitlabAPIURL }}
        - name: GITLAB_API_HOST
          value: {{ . | quote }}
        {{- end }}
        {{- with .Values.gitlabAPIToken }}
        - name: GITLAB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.api.fullname" $ }}
              key: GITLAB_API_TOKEN
        {{- end }}
        - name: JWTSECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.fullname" . }}-secrets
              key: JWTSECRET
        {{- with .Values.overwriteActiveStandbyTaskImage }}
        - name: OVERWRITE_ACTIVESTANDBY_TASK_IMAGE
          value: {{ . | quote }}
        {{- end }}
        - name: HARBOR_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.api.fullname" . }}
              key: HARBOR_ADMIN_PASSWORD
        - name: HARBOR_BASE_API_URL
          value: {{ required "A valid .Values.harborURL required!" .Values.harborURL }}/api/repositories/
        - name: LAGOON_VERSION
          value: {{ .Chart.AppVersion | replace "-" "." }}
        - name: PROJECTSEED
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.fullname" . }}-secrets
              key: PROJECTSEED
        - name: RABBITMQ_HOST
          value: {{ include "lagoon-core.broker.fullname" . }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.broker.fullname" . }}
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.broker.fullname" . }}
              key: RABBITMQ_USERNAME
        - name: REGISTRY
          value: {{ required "A valid .Values.registry required!" .Values.registry | quote }}
      {{- range $key, $val := .Values.webhooks2tasks.additionalEnvs }}
        - name: {{ $key }}
          value: {{ $val | quote }}
      {{- end }}
        resources:
          {{- toYaml .Values.webhooks2tasks.resources | nindent 10 }}
      {{- with .Values.webhooks2tasks.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhooks2tasks.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhooks2tasks.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
