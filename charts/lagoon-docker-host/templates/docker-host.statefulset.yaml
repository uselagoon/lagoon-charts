apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lagoon-docker-host.dockerHost.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "lagoon-docker-host.dockerHost.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: docker-host
  selector:
    matchLabels:
      {{- include "lagoon-docker-host.dockerHost.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lagoon-docker-host.dockerHost.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "lagoon-docker-host.dockerHost.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: docker-host
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- range $name, $value := .Values.extraEnvs }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- with .Values.httpProxy }}
        - name: HTTP_PROXY
          value: {{ . | quote }}
        - name: http_proxy
          value: {{ . | quote }}
        {{- end }}
        {{- with .Values.httpsProxy }}
        - name: HTTPS_PROXY
          value: {{ . | quote }}
        - name: https_proxy
          value: {{ . | quote }}
        {{- end }}
        {{- with .Values.noProxy }}
        - name: NO_PROXY
          value: {{ . | quote }}
        - name: no_proxy
          value: {{ . | quote }}
        {{- end }}
        - name: DOCKER_HOST
          value: {{ .Values.host | default "tcp://localhost:2375" }}
        - name: REGISTRY
          value: {{ .Values.registry | quote }}
        - name: REGISTRY_MIRROR
          value: {{ .Values.registryMirror | quote }}
        - name: REPOSITORIES_TO_UPDATE
          value: {{ join "|" .Values.repositoriesToUpdate | quote }}
        - name: PRUNE_IMAGES_UNTIL
          value: {{ .Values.pruneImagesUntil | quote }}
        - name: PRUNE_SCHEDULE
          value: {{ .Values.pruneImagesSchedule | quote }}
        - name: PRUNE_BUILDER_CACHE_UNTIL
          value: {{ .Values.pruneBuilderCacheUntil | quote }}
        - name: REMOVE_EXITED_SCHEDULE
          value: {{ .Values.removeExitedSchedule | quote }}
        - name: UPDATE_IMAGES_SCHEDULE
          value: {{ .Values.updateImagesSchedule | quote }}
        - name: PRUNE_DANGLING_SCHEDULE
          value: {{ .Values.pruneDanglingSchedule | quote }}
        - name: PRUNE_BUILDER_CACHE_SCHEDULE
          value: {{ .Values.pruneBuilderCacheSchedule | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel | quote }}
      {{- range $key, $val := .Values.additionalEnvs }}
      - name: {{ $key }}
        value: {{ $val | quote }}
      {{- end }}
        ports:
        - containerPort: 2375
          protocol: TCP
          name: docker-daemon
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 2375
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 2375
          timeoutSeconds: 1
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-lib
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: docker-lib
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.storage.size | quote }}
      {{- with .Values.storage.className }}
      storageClassName: {{ . | quote }}
      {{- end }}