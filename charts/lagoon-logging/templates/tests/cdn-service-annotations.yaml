---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-reader
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-2"
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["services"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-services
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
subjects:
- kind: Group
  name: system:serviceaccounts # all serviceaccounts
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: service-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "lagoon-logging.logsDispatcher.fullname" . }}-test-cdn-service-annotations
  labels:
    {{- include "lagoon-logging.logsDispatcher.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  containers:
  - name: kubectl
    image: alpine:latest
    command:
    - sh
    args:
    - "-c"
    - |
      set -eu
      apk add --no-cache kubectl jq
      kubectl get svc -o json {{ include "lagoon-logging.cdnLogsCollector.fullname" . }} |
      jq -e '.metadata.annotations["sh.lagoon.chart.testKey"] == "lagoonTestValue"'
  restartPolicy: Never
