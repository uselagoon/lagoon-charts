# Default values for lagoon-logging.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# this default image tag is set for all services and can be overridden
# on the service level, if not set it falls back to chart appVersion.
imageTag: ""

logsDispatcher:

  name: logs-dispatcher

  replicaCount: 3

  image:
    repository: uselagoon/logs-dispatcher
    pullPolicy: Always
    # Overrides the image tag whose default is the chart version.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    # If this value is set, the serviceAccount named must have clusterrole
    # view.
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # If you want to specify resources, uncomment the following lines, adjust
    # them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceMonitor:
    enabled: true

openshiftHaproxyLogsCollector:

  enabled: false

  name: openshift-haproxy-logs-collector

  replicaCount: 3

  image:
    repository: fluent/fluent-bit
    pullPolicy: Always
    # Overrides the image tag whose default is the chart version.
    tag: "1.6-debug"

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 0

  securityContext: {}

  resources: {}
    # If you want to specify resources, uncomment the following lines, adjust
    # them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceMonitor:
    enabled: true

logsTeeRouter:

  enabled: false

  name: logs-tee-router

  replicaCount: 3

  image:
    repository: uselagoon/logs-tee
    pullPolicy: Always
    # Overrides the image tag whose default is the chart version.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    # If this value is set, the serviceAccount named must have clusterrole
    # view.
    name: ""

  listenPort: 5140

  # the logs-dispatcher endpoint is automatically added to this list
  # define other endpoints here
  #
  # endpoints:
  # - logs2logs-db.lagoon.svc.cluster.local

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # If you want to specify resources, uncomment the following lines, adjust
    # them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

logsTeeApplication:

  enabled: false

  name: logs-tee-application

  replicaCount: 3

  image:
    repository: uselagoon/logs-tee
    pullPolicy: Always
    # Overrides the image tag whose default is the chart version.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    # If this value is set, the serviceAccount named must have clusterrole
    # view.
    name: ""

  listenPort: 5140

  # the logs-dispatcher endpoint is automatically added to this list
  # define other endpoints here
  #
  # endpoints:
  # - logs2logs-db.lagoon.svc.cluster.local

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # If you want to specify resources, uncomment the following lines, adjust
    # them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Don't collect logs from these namespaces.
# Comment out this field to collect from all namespaces.
excludeNamespaces:
# openshift
- acme-controller
- appuio-baas-operator
- appuio-dnsmonitor
- appuio-espejo
- appuio-infra
- appuio-monitoring
- appuio-pruner
- appuio-tiller
- dioscuri-controller
- kube-service-catalog
- management-infra
- monitoring-infra
- openshift
- openshift-ansible-service-broker
- openshift-console
- openshift-infra
- openshift-logging
- openshift-metrics-server
- openshift-monitoring
- openshift-node
- openshift-sdn
- openshift-web-console
- tiller

# Configure the cluster output buffer.
# This may require tweaking to handle high volumes of logs.
clusterOutputBuffer:
  flush_thread_count: 32
  # create chunks every 10 secs, therefore possible to flush every 10sec
  timekey: 10s
  # don't wait additional time for the timekey to be filled
  timekey_wait: 0s
  timekey_use_utc: true
  # don't sleep if there is more data to flush
  flush_thread_burst_interval: '0'
  # flush immediate, the forward target is in the same cluster so this should
  # be able to handle it
  flush_mode: immediate
  # limit exponential backoff period
  retry_max_interval: 30s

# chart dependency on logging-operator
logging-operator:
  enabled: true
  createCustomResource: false
  serviceMonitor: true
  serviceMonitorConfig:
    additionalLabels:
      monitoring.lagoon.sh/monitorMe: 'true'

# lagoon logs collection disabled by default. see below for instructions on
# enabling this.
lagoonLogs:
  enabled: false

forward:
  verifyConnectionAtStartup: true

# Some cluster services use ephemeral namespaces that cause many indices to be
# created in elasticsearch. Setting this to true will cause these service logs
# to be consolidated into a single index per service.
consolidateServiceIndices: false

# Optionally default logs forwarding may be disabled if e.g. all logs are being
# sent to a third-party service and not to a central elasticsearch.
enableDefaultForwarding: true

# The values below must be supplied during installation.
# Certificates should be provided in PEM format, and are generated as described
# in the README for the lagoon-logs-concentrator chart.
# Sample data shown below.

# tls:
#   caCert: |
#     -----BEGIN CERTIFICATE-----
#     ...
#     -----END CERTIFICATE-----
#   clientCert: |
#     -----BEGIN CERTIFICATE-----
#     ...
#     -----END CERTIFICATE-----
#   clientKey: |
#     -----BEGIN EC PRIVATE KEY-----
#     ...
#     -----END EC PRIVATE KEY-----
#
# forward:
#   username: "example1"
#   password: "securepass"
#   host: "203.0.113.9"
#   # hostName is optional - it is used for TLS verification for when host is an
#   # IP address.
#   # NOTE: if host is _not_ an IP address and it is presents a certificate
#   # without that hostname, you'll also need to set tlsVerifyHostname to
#   # false. The hostName field does _not_ override the host field for TLS
#   # verification when host is not an IP address.
#   hostName: "logs.server.example.com"
#   # tlsVerifyHostname: false
#   # hostPort is optional, default 24224
#   hostPort: "24224"
#   selfHostname: "logs-dispatcher.example1.lagoon.example.com"
#   sharedKey: "supersecurekey"
#
# clusterName: "example1"

# Optional lagoon logs configuration. This should be enabled on a full lagoon
# install, but not in a lagoon-remote install. If enabled, the rabbitMQ* values
# are required.
#
# lagoonLogs:
#   enabled: true
#   rabbitMQHost: secureuser
#   rabbitMQUser: secureuser
#   rabbitMQPassword: secureuser

# Optional namespace selection. Logs will _only_ be collected from these
# namespaces. You probably don't want to configure this, except for debugging.
#
# selectNamespaces:
# - drupal-example

# Optional log export configuration
#
# exportLogs:
#   s3.conf: |
#     <store ignore_error>
#       @type s3
#       ...
#     </store>
#   cloudwatch.conf: |
#     <store ignore_error>
#       @type cloudwatch_logs
#       ...
#     </store>

# Openshift only!
#
# fluentbitPrivileged: true
