name: Lint and test charts

on: pull_request

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Helm
      run: |
        cd /tmp
        curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
    - name: Add dependency chart repos
      run: |
        helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
        helm repo add lagoon https://uselagoon.github.io/lagoon-charts/
        helm repo add amazeeio https://amazeeio.github.io/charts/
    - name: Generate helm templates
      run: |
        cd charts
        # hacky workaround for lagoon-test templated values
        tests=[foo,bar] envsubst '$tests' < lagoon-test/ci/linter-values.yaml.tpl > lagoon-test/ci/linter-values.yaml

        for chart in *; do
          helm dependency build $chart
          mkdir -p /tmp/charts/$chart
          helm template $chart $chart \
            --values $chart/ci/linter-values.yaml \
            --output-dir /tmp/charts/$chart
        done

        # workaround until https://github.com/banzaicloud/logging-operator/pull/629 is released
        rm -rf /tmp/charts/lagoon-logging/lagoon-logging/charts
    - name: Install YAMLlint
      run: sudo apt-get -y install yamllint
    - name: Lint the templates
      run: |
        set -euo pipefail
        cat > .yamllint <<EOF
        extends: default
        rules:
          indentation:
            indent-sequences: consistent
          line-length:
            level: warning
        EOF
        yamllint -f parsable /tmp/charts | awk -F: '{print; system("sed \"" $2 "q;d\" " $1)}'

  # runs for all charts other than lagoon-test, which is excluded in
  # default.ct.yaml
  lint-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"

    - name: Set up chart-testing dependencies
      run: sudo apt-get -y install python3-wheel

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.0.1

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --config ./default.ct.yaml)
        if [[ "$changed" ]]; then
          echo "::set-output name=changed::true"
          echo "$changed"
        fi

    - name: Run chart-testing (lint)
      run: ct lint --config ./default.ct.yaml

    - name: Create kind cluster
      uses: helm/kind-action@v1.1.0
      if: steps.list-changed.outputs.changed == 'true'

    - name: Run chart-testing (install)
      run: ct install --config ./default.ct.yaml
